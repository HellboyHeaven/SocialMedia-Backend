// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistance;

#nullable disable

namespace Like.Persistance.Migrations
{
    [DbContext(typeof(LikeDbContext))]
    [Migration("20250608123135_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.LikeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Core.CommentLike", b =>
                {
                    b.HasBaseType("Core.LikeEntity");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.HasIndex("AuthorId", "CommentId")
                        .IsUnique();

                    b.HasIndex("CommentId", "AuthorId")
                        .IsUnique()
                        .HasDatabaseName("IX_CommentLike_CommentId_AuthorId");

                    b.ToTable("CommentLikes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6186e3f3-4b71-4555-9aeb-69c0c64a27c8"),
                            AuthorId = new Guid("a1234567-89ab-4cde-9012-3456789abcde"),
                            CreatedAt = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CommentId = new Guid("75c9cdb1-8706-4207-b0ee-792349916511"),
                            TargetId = new Guid("75c9cdb1-8706-4207-b0ee-792349916511")
                        });
                });

            modelBuilder.Entity("Core.PostLike", b =>
                {
                    b.HasBaseType("Core.LikeEntity");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid");

                    b.HasIndex("AuthorId", "PostId")
                        .IsUnique();

                    b.HasIndex("PostId", "AuthorId")
                        .IsUnique()
                        .HasDatabaseName("IX_PostLike_PostId_AuthorId");

                    b.ToTable("PostLikes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7e7774a-ff56-4de5-83ae-9fc5742ca05b"),
                            AuthorId = new Guid("a1234567-89ab-4cde-9012-3456789abcde"),
                            CreatedAt = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            PostId = new Guid("4e0e9111-9e6b-4e20-8b40-b5fd06fb9069"),
                            TargetId = new Guid("4e0e9111-9e6b-4e20-8b40-b5fd06fb9069")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
